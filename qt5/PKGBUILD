# $Id: PKGBUILD 249858 2015-10-30 06:04:11Z fyan $
# Maintainer: Felix Yan <felixonmars@archlinux.org>
# Contributor: Andrea Scarpino <andrea@archlinux.org>

pkgbase=qt5
pkgname=('qt5-3d-debug'
         'qt5-base-debug'
         'qt5-canvas3d-debug'
         'qt5-connectivity-debug'
         'qt5-declarative-debug'
         'qt5-doc-debug'
         'qt5-enginio-debug'
         'qt5-graphicaleffects-debug'
         'qt5-imageformats-debug'
         'qt5-location-debug'
         'qt5-multimedia-debug'
         'qt5-quick1-debug'
         'qt5-quickcontrols-debug'
         'qt5-script-debug'
         'qt5-sensors-debug'
         'qt5-serialport-debug'
         'qt5-svg-debug'
         'qt5-tools-debug'
         'qt5-translations-debug'
         'qt5-wayland-debug'
         'qt5-webchannel-debug'
         'qt5-webengine-debug'
         'qt5-webkit-debug'
         'qt5-websockets-debug'
         'qt5-x11extras-debug'
         'qt5-xmlpatterns-debug')
pkgver=5.6.0_beta
pkgrel=1
arch=('i686' 'x86_64')
url='http://www.qt.io/developers'
license=('GPL3' 'LGPL' 'FDL' 'custom')
makedepends=('libxcb' 'xcb-proto' 'xcb-util' 'xcb-util-image' 'xcb-util-wm' 'xcb-util-keysyms'
            'mesa' 'at-spi2-core' 'alsa-lib' 'gst-plugins-base-libs' 'libjpeg-turbo' 'cups'
            'libpulse' 'hicolor-icon-theme' 'desktop-file-utils' 'postgresql-libs' 'nss'
            'libmariadbclient' 'sqlite' 'unixodbc' 'libfbclient' 'libmng' 'python2' 'ruby'
            'gperf' 'libxslt' 'libxcomposite' 'fontconfig' 'bluez-libs' 'openal' 'gtk2'
            'libxkbcommon-x11' 'mtdev' 'harfbuzz' 'libwebp' 'leveldb' 'geoclue' 'pciutils'
            'libinput')
groups=('qt' 'qt5')
_pkgfqn="qt5"
source=('git+https://code.qt.io/qt/qt5.git'
        'assistant.desktop' 'designer.desktop' 'linguist.desktop' 'qdbusviewer.desktop')
md5sums=('SKIP'
         'b2897dd6a2967bccf8f10e397aafee55'
         '76e150b20178d2d43801f7367232e5f7'
         '188da8f4c87316e730ebf1c6217bf5a0'
         '322b419b16c75d4de0ee7ad0a246caa1')
options=('debug' '!strip')

prepare() {
  cd ${_pkgfqn}

  sed -i 's|$self->{'\''base-url'\''} = $url;|$self->{'\''base-url'\''} = "https://code.qt.io/";|' init-repository
  ./init-repository --module-subset=all -f

  # Build qmake using Arch {C,LD}FLAGS
  # This also sets default {C,CXX,LD}FLAGS for projects built using qmake
  sed -i -e "s|^\(QMAKE_CFLAGS_RELEASE.*\)|\1 ${CFLAGS}|" \
    qtbase/mkspecs/common/gcc-base.conf
  sed -i -e "s|^\(QMAKE_LFLAGS_RELEASE.*\)|\1 ${LDFLAGS}|" \
    qtbase/mkspecs/common/g++-unix.conf

  # Use python2 for Python 2.x
  find . -name '*.py' -exec sed -i \
    's|#![ ]*/usr/bin/python$|&2|;s|#![ ]*/usr/bin/env python$|&2|' {} +
  # in qtwebengine there are still a lot of relative calls which need a workaround
  mkdir "${srcdir}"/python2-path || true
  ln -s /usr/bin/python2 "${srcdir}"/python2-path/python
}

build() {
  cd ${_pkgfqn}

  export QTDIR="${srcdir}"/${_pkgfqn}
  export LD_LIBRARY_PATH="${QTDIR}"/qtbase/lib:"${QTDIR}"/qttools/lib:"${LD_LIBRARY_PATH}"
  export QT_PLUGIN_PATH="${QTDIR}"/qtbase/plugins

  # python2 workaround
  export PATH="${srcdir}/python2-path:$PATH"

  # FS#38796
  [[ "${CARCH}" = "i686" ]] && SSE2="-no-sse2"

  EXTRA_QMAKEVARS_POST="CONFIG-=create_cmake" PYTHON=/usr/bin/python2 \
  ./configure -confirm-license -opensource \
    -prefix /usr \
    -bindir /usr/lib/qt/bin \
    -docdir /usr/share/doc/qt \
    -headerdir /usr/include/qt \
    -archdatadir /usr/lib/qt \
    -datadir /usr/share/qt \
    -sysconfdir /etc/xdg \
    -examplesdir /usr/share/doc/qt/examples \
    -plugin-sql-{psql,mysql,sqlite,odbc,ibase} \
    -system-sqlite \
    -openssl-linked \
    -nomake examples \
    -no-rpath \
    -optimized-qmake \
    -dbus-linked \
    -system-harfbuzz \
    -journald \
    -libinput \
    -no-use-gold-linker \
    -no-reduce-relocations ${SSE2} \
    -force-debug-info \
    -verbose

  make

  # Fix docs build when qt is not installed
  sed -i "s|/usr/lib/qt/bin/qdoc|${QTDIR}/qtbase/bin/qdoc|g" \
    "${QTDIR}"/qtbase/qmake/Makefile.qmake-docs
  find "${QTDIR}" -name Makefile \
    -exec sed -i "s|/usr/lib/qt/bin/qdoc|${QTDIR}/qtbase/bin/qdoc|g" {} +
  sed -i "s|/usr/lib/qt/bin/qhelpgenerator|${QTDIR}/qttools/bin/qhelpgenerator|g" \
    "${QTDIR}"/qtbase/qmake/Makefile.qmake-docs
  find "${QTDIR}" -name Makefile \
    -exec sed -i "s|/usr/lib/qt/bin/qhelpgenerator|${QTDIR}/qttools/bin/qhelpgenerator|g" {} +
  sed -i "s|/usr/lib/qt/bin/qhelpgenerator|${QTDIR}/qttools/bin/qhelpgenerator|g" \
    qtwebkit/Source/Makefile.api
  find "${QTDIR}" -name Makefile \
    -exec sed -i "s|/usr/lib/qt/bin/qmlplugindump|${QTDIR}/qtdeclarative/bin/qmlplugindump|g" {} +

  make docs
}

package_qt5-3d-debug() {
  pkgdesc='C++ and QML APIs for easy inclusion of 3D graphics'
  depends=('qt5-declarative')
  license=('LGPL')
  provides=("qt5-3d=$pkgver")
  conflicts=('qt5-3d')
  options=('debug' '!strip')

  cd ${_pkgfqn}/qt3d
  make INSTALL_ROOT="${pkgdir}" install

  # Drop QMAKE_PRL_BUILD_DIR because reference the build dir
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d' {} \;
}

package_qt5-base-debug() {
  pkgdesc='A cross-platform application and UI framework'
  depends=('libjpeg-turbo' 'xcb-util-keysyms' 'libgl' 'dbus' 'fontconfig' 'systemd'
           'xcb-util-wm' 'libxrender' 'libxi' 'sqlite' 'xcb-util-image' 'icu'
           'qtchooser' 'libinput')
  optdepends=('qt5-svg: to use SVG icon themes'
              'postgresql-libs: PostgreSQL driver'
              'libmariadbclient: MariaDB driver'
              'unixodbc: ODBC driver'
              'libfbclient: Firebird/iBase driver'
              'mtdev: evdev plugin'
              'libxkbcommon-x11: xcb plugin'
              'libsm: xcb plugin'
              'gtk2: GTK2 plugin')
  conflicts=('qt' 'qt5-base')
  provides=("qt5-base=$pkgver")
  options=('debug' '!strip')

  cd ${_pkgfqn}/qtbase
  make INSTALL_ROOT="${pkgdir}" install

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt

  # Drop QMAKE_PRL_BUILD_DIR because reference the build dir
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d' {} \;

  # Fix wrong qmake path in pri file
  sed -i "s|${srcdir}/${_pkgfqn}/qtbase|/usr|" \
    "${pkgdir}"/usr/lib/qt/mkspecs/modules/qt_lib_bootstrap_private.pri

  # Useful symlinks
  install -d "${pkgdir}"/usr/bin
  for b in "${pkgdir}"/usr/lib/qt/bin/*; do
    ln -s /usr/lib/qt/bin/$(basename $b) "${pkgdir}"/usr/bin/$(basename $b)-qt5
  done
}

package_qt5-canvas3d-debug() {
  pkgdesc='A JavaScript 3D rendering API for Qt Quick'
  depends=('qt5-declarative')
  license=('LGPL')
  provides=("qt5-canvas3d=$pkgver")
  conflicts=('qt5-canvas3d')
  options=('debug' '!strip')

  cd ${_pkgfqn}/qtcanvas3d
  make INSTALL_ROOT="${pkgdir}" install

  # Drop QMAKE_PRL_BUILD_DIR because reference the build dir
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d' {} \;
}

package_qt5-connectivity-debug() {
  pkgdesc='Provides access to Bluetooth hardware'
  depends=('qt5-declarative' 'bluez-libs')
  provides=("qt5-connectivity=$pkgver")
  conflicts=('qt5-connectivity')
  options=('debug' '!strip')

  cd ${_pkgfqn}/qtconnectivity
  make INSTALL_ROOT="${pkgdir}" install

  # Drop QMAKE_PRL_BUILD_DIR because reference the build dir
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d' {} \;

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-declarative-debug() {
  pkgdesc='Classes for QML and JavaScript languages'
  depends=('qt5-xmlpatterns' 'libxkbcommon-x11' 'libsm')
  conflicts=('qt' 'qt5-declarative')
  provides=("qt5-declarative=$pkgver")
  options=('debug' '!strip')

  cd ${_pkgfqn}/qtdeclarative
  make INSTALL_ROOT="${pkgdir}" install

  # Drop QMAKE_PRL_BUILD_DIR because reference the build dir
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d' {} \;

  # Useful symlinks
  install -d "${pkgdir}"/usr/bin
  for b in "${pkgdir}"/usr/lib/qt/bin/*; do
    ln -s /usr/lib/qt/bin/$(basename $b) "${pkgdir}"/usr/bin/$(basename $b)-qt5
  done

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-doc-debug() {
  pkgdesc='A cross-platform application and UI framework (Documentation)'
  depends=('qt5-base')
#  arch=('any')
  conflicts=('qt-doc' 'qt5-doc')
  replaces=('qt-doc')
  provides=('qt-doc' 'qt5-doc')
  options=('docs' '!emptydirs' 'debug' '!strip')
  groups=()

  cd ${_pkgfqn}
  make INSTALL_ROOT="${pkgdir}" install_docs

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-enginio-debug() {
  pkgdesc='A Backend-as-a-Service solution to ease the backend development for connected and data-driven application'
  depends=('qt5-declarative')
  conflicts=('qt5-enginio')
  provides=("qt5-enginio=$pkgver")
  options=('debug' '!strip')

  cd ${_pkgfqn}/qtenginio
  make INSTALL_ROOT="${pkgdir}" install

  # Drop QMAKE_PRL_BUILD_DIR because reference the build dir
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d' {} \;

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-graphicaleffects-debug() {
  pkgdesc='Graphical effects for use with Qt Quick 2'
  depends=('qt5-declarative')
  conflicts=('qt5-graphicaleffects')
  provides=("qt5-graphicaleffects=$pkgver")
  options=('debug' '!strip')

  cd ${_pkgfqn}/qtgraphicaleffects
  make INSTALL_ROOT="${pkgdir}" install

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-imageformats-debug() {
  pkgdesc='Plugins for additional image formats: TIFF, MNG, TGA, WBMP'
  depends=('qt5-base' 'jasper' 'libmng' 'libwebp')
  conflicts=('qt' 'qt5-imageformats')
  provides=("qt5-imageformats=$pkgver")
  options=('debug' '!strip')

  cd ${_pkgfqn}/qtimageformats
  make INSTALL_ROOT="${pkgdir}" install

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-location-debug() {
  pkgdesc='Provides access to position, satellite and area monitoring classes'
  depends=('qt5-declarative' 'geoclue')
  conflicts=('qt5-location')
  provides=("qt5-location=$pkgver")
  options=('debug' '!strip')

  cd ${_pkgfqn}/qtlocation
  make INSTALL_ROOT="${pkgdir}" install

  # Drop QMAKE_PRL_BUILD_DIR because reference the build dir
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d' {} \;

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-multimedia-debug() {
  pkgdesc='Classes for audio, video, radio and camera functionality'
  depends=('qt5-declarative' 'libpulse' 'gst-plugins-base-libs' 'openal')
  optdepends=('gst-plugins-bad: Qt MediaService plugin')
  conflicts=('qt' 'qt5-multimedia')
  provides=("qt5-multimedia=$pkgver")
  options=('debug' '!strip')

  cd ${_pkgfqn}/qtmultimedia
  make INSTALL_ROOT="${pkgdir}" install

  # Drop QMAKE_PRL_BUILD_DIR because reference the build dir
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d' {} \;

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-quick1-debug() {
  pkgdesc='Qt Declarative is provided for Qt 4 compatibility'
  depends=('qt5-webkit' 'qt5-script')
  conflicts=('qt' 'qt5-quick1')
  provides=("qt5-quick1=$pkgver")
  options=('debug' '!strip')

  cd ${_pkgfqn}/qtquick1
  make INSTALL_ROOT="${pkgdir}" install

  # Drop QMAKE_PRL_BUILD_DIR because reference the build dir
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d' {} \;

  # Useful symlinks
  install -d "${pkgdir}"/usr/bin
  for b in "${pkgdir}"/usr/lib/qt/bin/*; do
    ln -s /usr/lib/qt/bin/$(basename $b) "${pkgdir}"/usr/bin/$(basename $b)-qt5
  done

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-quickcontrols-debug() {
  pkgdesc='Reusable Qt Quick based UI controls to create classic desktop-style user interfaces'
  depends=('qt5-declarative')
  license=('LGPL')
  conflicts=('qt5-quickcontrols')
  provides=("qt5-quickcontrols=$pkgver")
  options=('debug' '!strip')

  cd ${_pkgfqn}/qtquickcontrols
  make INSTALL_ROOT="${pkgdir}" install
}

package_qt5-script-debug() {
  pkgdesc='Classes for making Qt applications scriptable. Provided for Qt 4.x compatibility'
  depends=('qt5-base')
  conflicts=('qt' 'qt5-script')
  provides=("qt5-script=$pkgver")
  options=('debug' '!strip')

  cd ${_pkgfqn}/qtscript
  make INSTALL_ROOT="${pkgdir}" install

  # Drop QMAKE_PRL_BUILD_DIR because reference the build dir
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d' {} \;

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-sensors-debug() {
  pkgdesc='Provides access to sensor hardware and motion gesture recognition'
  depends=('qt5-declarative')
  conflicts=('qt5-sensors')
  provides=("qt5-sensors=$pkgver")
  options=('debug' '!strip')

  cd ${_pkgfqn}/qtsensors
  make INSTALL_ROOT="${pkgdir}" install

  # Drop QMAKE_PRL_BUILD_DIR because reference the build dir
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d' {} \;

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-serialport-debug() {
  pkgdesc='Provides access to hardware and virtual serial ports'
  depends=('qt5-base')
  conflicts=('qt5-serialport')
  provides=("qt5-serialport=$pkgver")
  options=('debug' '!strip')

  cd ${_pkgfqn}/qtserialport
  make INSTALL_ROOT="${pkgdir}" install

  # Drop QMAKE_PRL_BUILD_DIR because reference the build dir
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d' {} \;

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-svg-debug() {
  pkgdesc='Classes for displaying the contents of SVG files'
  depends=('qt5-base')
  conflicts=('qt' 'qt5-svg')
  provides=("qt5-svg=$pkgver")
  options=('debug' '!strip')

  cd ${_pkgfqn}/qtsvg
  make INSTALL_ROOT="${pkgdir}" install

  # Drop QMAKE_PRL_BUILD_DIR because reference the build dir
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d' {} \;

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-tools-debug() {
  pkgdesc='A cross-platform application and UI framework (Development Tools, QtHelp)'
  depends=('qt5-webkit' 'desktop-file-utils' 'qt5-translations' 'hicolor-icon-theme'
           'xdg-utils')
  optdepends=('qt5-doc: documentation')
  install='qt5-tools.install'
  conflicts=('qt' 'qt5-tools')
  options=('staticlibs' 'debug' '!strip') # libQt5UiTools builds as static only$
  provides=("qt5-tools=$pkgver")

  cd ${_pkgfqn}/qttools
  make INSTALL_ROOT="${pkgdir}" install

  # install missing icons and desktop files
  for icon in src/linguist/linguist/images/icons/linguist-*-32.png ; do
    size=$(echo $(basename ${icon}) | cut -d- -f2)
    install -p -D -m644 ${icon} \
      "${pkgdir}/usr/share/icons/hicolor/${size}x${size}/apps/linguist.png"
  done

  install -D -m644 src/assistant/assistant/images/assistant.png \
    "${pkgdir}/usr/share/icons/hicolor/32x32/apps/assistant.png"
  install -D -m644 src/assistant/assistant/images/assistant-128.png \
    "${pkgdir}/usr/share/icons/hicolor/128x128/apps/assistant.png"
  install -D -m644 src/designer/src/designer/images/designer.png \
    "${pkgdir}/usr/share/icons/hicolor/128x128/apps/QtProject-designer.png"
  install -D -m644 src/qdbus/qdbusviewer/images/qdbusviewer.png \
    "${pkgdir}/usr/share/icons/hicolor/32x32/apps/qdbusviewer.png"
  install -D -m644 src/qdbus/qdbusviewer/images/qdbusviewer-128.png \
    "${pkgdir}/usr/share/icons/hicolor/128x128/apps/qdbusviewer.png"
  install -d "${pkgdir}/usr/share/applications"
  install -m644 "${srcdir}"/{linguist,designer,assistant,qdbusviewer}.desktop \
    "${pkgdir}/usr/share/applications/"

  # Drop QMAKE_PRL_BUILD_DIR because reference the build dir
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d' {} \;

  # Useful symlinks
  install -d "${pkgdir}"/usr/bin
  for b in "${pkgdir}"/usr/lib/qt/bin/*; do
    ln -s /usr/lib/qt/bin/$(basename $b) "${pkgdir}"/usr/bin/$(basename $b)-qt5
  done

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-translations-debug() {
  pkgdesc='A cross-platform application and UI framework (Translations)'
  depends=('qt5-base')
  conflicts=('qt' 'qt5-translations')
  provides=("qt5-translations=$pkgver")
  options=('debug' '!strip')

  cd ${_pkgfqn}/qttranslations
  make INSTALL_ROOT="${pkgdir}" install

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-wayland-debug() {
  pkgdesc='Provides APIs for Wayland'
  depends=('qt5-base' 'libxcomposite' 'libxkbcommon')
  conflicts=('qt5-wayland')
  provides=("qt5-wayland=$pkgver")
  options=('debug' '!strip')

  cd ${_pkgfqn}/qtwayland
  make INSTALL_ROOT="${pkgdir}" install

  # Drop QMAKE_PRL_BUILD_DIR because reference the build dir
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d' {} \;

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-webchannel-debug() {
  pkgdesc='Provides access to QObject or QML objects from HTML clients for seamless integration of Qt applications with HTML/JavaScript clients'
  depends=('qt5-declarative')
  conflicts=('qt5-webchannel')
  provides=("qt5-webchannel=$pkgver")
  options=('debug' '!strip')

  cd ${_pkgfqn}/qtwebchannel
  make INSTALL_ROOT="${pkgdir}" install

  # Drop QMAKE_PRL_BUILD_DIR because reference the build dir
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d' {} \;

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-webengine-debug() {
  pkgdesc='Provides support for web applications using the Chromium browser project'
  depends=('qt5-webchannel' 'qt5-location' 'nss' 'libxtst' 'libxcursor' 'libxrandr' 'alsa-lib' 'libxcomposite')
  license=('LGPL')
  conflicts=('qt5-webengine')
  provides=("qt5-webengine=$pkgver")
  options=('debug' '!strip')

  cd ${_pkgfqn}/qtwebengine
  make INSTALL_ROOT="${pkgdir}" install

  rm -rf "${pkgdir}"/usr/share/doc
}

package_qt5-webkit-debug() {
  pkgdesc='Classes for a WebKit2 based implementation and a new QML API'
  depends=('qt5-sensors' 'qt5-location' 'qt5-webchannel' 'gst-plugins-base' 'libxslt'
           'libxcomposite' 'libwebp')
  optdepends=('gst-plugins-good: Webm codec support')
  license=('GPL3' 'LGPL' 'FDL')
  conflicts=('qt5-webkit')
  provides=("qt5-webkit=$pkgver")
  options=('debug' '!strip')

  cd ${_pkgfqn}/qtwebkit
  make INSTALL_ROOT="${pkgdir}" install

  # Drop QMAKE_PRL_BUILD_DIR because reference the build dir
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d' {} \;

  # Fix wrong path in pc file
  perl -pi -e "s, -L${srcdir}/?\S+,,g" "${pkgdir}"/usr/lib/pkgconfig/Qt5WebKit.pc
}

package_qt5-websockets-debug() {
  pkgdesc='Provides WebSocket communication compliant with RFC 6455'
  depends=('qt5-declarative')
  conflicts=('qt5-websockets')
  provides=("qt5-websockets=$pkgver")
  options=('debug' '!strip')

  cd ${_pkgfqn}/qtwebsockets
  make INSTALL_ROOT="${pkgdir}" install

  # Drop QMAKE_PRL_BUILD_DIR because reference the build dir
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d' {} \;

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-x11extras-debug() {
  pkgdesc='Provides platform-specific APIs for X11'
  depends=('qt5-base')
  conflicts=('qt5-x11extras')
  provides=("qt5-x11extras=$pkgver")
  options=('debug' '!strip')

  cd ${_pkgfqn}/qtx11extras
  make INSTALL_ROOT="${pkgdir}" install

  # Drop QMAKE_PRL_BUILD_DIR because reference the build dir
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d' {} \;

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-xmlpatterns-debug() {
  pkgdesc='Support for XPath, XQuery, XSLT and XML schema validation'
  depends=('qt5-base')
  conflicts=('qt' 'qt5-xmlpatterns')
  provides=("qt5-xmlpatterns=$pkgver")
  options=('debug' '!strip')

  cd ${_pkgfqn}/qtxmlpatterns
  make INSTALL_ROOT="${pkgdir}" install

  # Drop QMAKE_PRL_BUILD_DIR because reference the build dir
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d' {} \;

  # Useful symlinks
  install -d "${pkgdir}"/usr/bin
  for b in "${pkgdir}"/usr/lib/qt/bin/*; do
    ln -s /usr/lib/qt/bin/$(basename $b) "${pkgdir}"/usr/bin/$(basename $b)-qt5
  done

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}
